{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nexport function useTimeout(fn, ms) {\n  _s();\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      fn();\n    }, ms);\n    return () => clearTimeout(timeout);\n  }, [fn, ms]);\n}\n\n_s(useTimeout, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport function useShowLoader(loading, delayMs) {\n  _s2();\n\n  const [showLoader, setShowLoader] = React.useState(false);\n  useTimeout(() => {\n    if (loading) {\n      setShowLoader(true);\n    }\n  }, [delayMs]);\n  React.useEffect(() => {\n    if (!loading) {\n      setShowLoader(false);\n    }\n  }, [loading]);\n  return showLoader;\n}\n\n_s2(useShowLoader, \"iInTcVZwFjEEqnuk0Dz5lVbpfUU=\", false, function () {\n  return [useTimeout];\n});","map":{"version":3,"sources":["C:/Users/Donovan/aegisproject/src/hooks/util-hooks.js"],"names":["React","useTimeout","fn","ms","useEffect","timeout","setTimeout","clearTimeout","useShowLoader","loading","delayMs","showLoader","setShowLoader","useState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAwBC,EAAxB,EAA4B;AAAA;;AACjCH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AACpB,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BJ,MAAAA,EAAE;AACH,KAFyB,EAEvBC,EAFuB,CAA1B;AAGA,WAAO,MAAMI,YAAY,CAACF,OAAD,CAAzB;AACD,GALD,EAKG,CAACH,EAAD,EAAKC,EAAL,CALH;AAMD;;GAPeF,U;;AAShB,OAAO,SAASO,aAAT,CAAuBC,OAAvB,EAAgCC,OAAhC,EAAyC;AAAA;;AAC9C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAApC;AACAZ,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIQ,OAAJ,EAAa;AACXG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAJS,EAIP,CAACF,OAAD,CAJO,CAAV;AAKAV,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACK,OAAL,EAAc;AACZG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAJD,EAIG,CAACH,OAAD,CAJH;AAKA,SAAOE,UAAP;AACD;;IAbeH,a;UAEdP,U","sourcesContent":["import React from \"react\";\n\nexport function useTimeout(fn, ms) {\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      fn();\n    }, ms);\n    return () => clearTimeout(timeout);\n  }, [fn, ms]);\n}\n\nexport function useShowLoader(loading, delayMs) {\n  const [showLoader, setShowLoader] = React.useState(false);\n  useTimeout(() => {\n    if (loading) {\n      setShowLoader(true);\n    }\n  }, [delayMs]);\n  React.useEffect(() => {\n    if (!loading) {\n      setShowLoader(false);\n    }\n  }, [loading]);\n  return showLoader;\n}\n"]},"metadata":{},"sourceType":"module"}