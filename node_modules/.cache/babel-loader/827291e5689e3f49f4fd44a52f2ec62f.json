{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRealmApp } from \"../components/RealmApp\";\n/**\n * Returns a MongoDB Collection client object\n * @template DocType extends Realm.Services.MongoDB.Document\n * @param {Object} config - A description of the collection.\n * @param {string} [config.cluster] - The service name of the collection's linked cluster.\n * @param {string} config.db - The name of database that contains the collection.\n * @param {string} config.collection - The name of the collection.\n * @returns {Realm.Services.MongoDB.MongoDBCollection<DocType>} config.collection - The name of the collection.\n */\n\nexport function useCollection(_ref) {\n  _s();\n\n  let {\n    cluster = \"mongodb-atlas\",\n    db,\n    collection\n  } = _ref;\n  const realmApp = useRealmApp();\n  return React.useMemo(() => {\n    const mdb = realmApp.currentUser.mongoClient(cluster);\n    return mdb.db(db).collection(collection);\n  }, [realmApp.currentUser, cluster, db, collection]);\n}\n\n_s(useCollection, \"g6MPCEFuivav16s7rMhKllgbA6w=\", false, function () {\n  return [useRealmApp];\n});","map":{"version":3,"sources":["C:/Users/Donovan/aegisproject/src/hooks/useCollection.js"],"names":["React","useRealmApp","useCollection","cluster","db","collection","realmApp","useMemo","mdb","currentUser","mongoClient"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,OAAsE;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,OAAO,GAAG,eAAZ;AAA6BC,IAAAA,EAA7B;AAAiCC,IAAAA;AAAjC,GAA+C;AAC3E,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,SAAOD,KAAK,CAACO,OAAN,CAAc,MAAM;AACzB,UAAMC,GAAG,GAAGF,QAAQ,CAACG,WAAT,CAAqBC,WAArB,CAAiCP,OAAjC,CAAZ;AACA,WAAOK,GAAG,CAACJ,EAAJ,CAAOA,EAAP,EAAWC,UAAX,CAAsBA,UAAtB,CAAP;AACD,GAHM,EAGJ,CAACC,QAAQ,CAACG,WAAV,EAAuBN,OAAvB,EAAgCC,EAAhC,EAAoCC,UAApC,CAHI,CAAP;AAID;;GANeH,a;UACGD,W","sourcesContent":["import React from \"react\";\nimport { useRealmApp } from \"../components/RealmApp\";\n\n/**\n * Returns a MongoDB Collection client object\n * @template DocType extends Realm.Services.MongoDB.Document\n * @param {Object} config - A description of the collection.\n * @param {string} [config.cluster] - The service name of the collection's linked cluster.\n * @param {string} config.db - The name of database that contains the collection.\n * @param {string} config.collection - The name of the collection.\n * @returns {Realm.Services.MongoDB.MongoDBCollection<DocType>} config.collection - The name of the collection.\n */\nexport function useCollection({ cluster = \"mongodb-atlas\", db, collection }) {\n  const realmApp = useRealmApp();\n  return React.useMemo(() => {\n    const mdb = realmApp.currentUser.mongoClient(cluster);\n    return mdb.db(db).collection(collection);\n  }, [realmApp.currentUser, cluster, db, collection]);\n}\n"]},"metadata":{},"sourceType":"module"}