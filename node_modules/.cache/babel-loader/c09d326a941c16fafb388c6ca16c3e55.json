{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Donovan\\\\aegisproject\\\\src\\\\hooks\\\\useErrorAlert.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nexport function ErrorAlert(_ref) {\n  let {\n    isOpen,\n    message,\n    onClose = () => {}\n  } = _ref;\n  return isOpen ? /*#__PURE__*/_jsxDEV(Alert, {\n    onClose: onClose,\n    severity: \"error\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this) : null;\n}\n_c2 = ErrorAlert;\nexport function useErrorAlert(_ref2) {\n  _s();\n\n  let {\n    error,\n    clearError,\n    hideAfterMs\n  } = _ref2;\n  const [showErrorAlert, setShowErrorAlert] = React.useState(false);\n  const clearErrorAlert = React.useCallback(() => {\n    clearError();\n    setShowErrorAlert(false);\n  }, [clearError]);\n  React.useEffect(() => {\n    if (error) {\n      setShowErrorAlert(true);\n\n      if (hideAfterMs) {\n        const timeout = setTimeout(() => {\n          clearErrorAlert();\n        }, hideAfterMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n    } else {\n      setShowErrorAlert(false);\n    }\n  }, [error, clearErrorAlert, hideAfterMs]);\n  return () => /*#__PURE__*/_jsxDEV(ErrorAlert, {\n    isOpen: showErrorAlert,\n    message: error,\n    onClose: () => {\n      clearErrorAlert();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(useErrorAlert, \"lEUH9MpGkHmXzGoAURB6iJG5IRI=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"ErrorAlert\");","map":{"version":3,"sources":["C:/Users/Donovan/aegisproject/src/hooks/useErrorAlert.js"],"names":["React","MuiAlert","Alert","props","ErrorAlert","isOpen","message","onClose","useErrorAlert","error","clearError","hideAfterMs","showErrorAlert","setShowErrorAlert","useState","clearErrorAlert","useCallback","useEffect","timeout","setTimeout","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,K;AAIT,OAAO,SAASE,UAAT,OAA6D;AAAA,MAAzC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAO,GAAG,MAAM,CAAE;AAArC,GAAyC;AAClE,SAAOF,MAAM,gBACX,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEE,OAAhB;AAAyB,IAAA,QAAQ,EAAC,OAAlC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADW,GAIT,IAJJ;AAKD;MANeF,U;AAQhB,OAAO,SAASI,aAAT,QAA2D;AAAA;;AAAA,MAApC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,GAAoC;AAChE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,KAAK,CAACc,QAAN,CAAe,KAAf,CAA5C;AACA,QAAMC,eAAe,GAAGf,KAAK,CAACgB,WAAN,CAAkB,MAAM;AAC9CN,IAAAA,UAAU;AACVG,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHuB,EAGrB,CAACH,UAAD,CAHqB,CAAxB;AAKAV,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,QAAIR,KAAJ,EAAW;AACTI,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AACA,UAAIF,WAAJ,EAAiB;AACf,cAAMO,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BJ,UAAAA,eAAe;AAChB,SAFyB,EAEvBJ,WAFuB,CAA1B;AAGA,eAAO,MAAM;AACXS,UAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,SAFD;AAGD;AACF,KAVD,MAUO;AACLL,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,GAdD,EAcG,CAACJ,KAAD,EAAQM,eAAR,EAAyBJ,WAAzB,CAdH;AAgBA,SAAO,mBACL,QAAC,UAAD;AACE,IAAA,MAAM,EAAEC,cADV;AAEE,IAAA,OAAO,EAAEH,KAFX;AAGE,IAAA,OAAO,EAAE,MAAM;AACbM,MAAAA,eAAe;AAChB;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhCeP,a","sourcesContent":["import React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport function ErrorAlert({ isOpen, message, onClose = () => {} }) {\n  return isOpen ? (\n    <Alert onClose={onClose} severity=\"error\">\n      {message}\n    </Alert>\n  ) : null;\n}\n\nexport function useErrorAlert({ error, clearError, hideAfterMs }) {\n  const [showErrorAlert, setShowErrorAlert] = React.useState(false);\n  const clearErrorAlert = React.useCallback(() => {\n    clearError();\n    setShowErrorAlert(false);\n  }, [clearError]);\n\n  React.useEffect(() => {\n    if (error) {\n      setShowErrorAlert(true);\n      if (hideAfterMs) {\n        const timeout = setTimeout(() => {\n          clearErrorAlert();\n        }, hideAfterMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n    } else {\n      setShowErrorAlert(false);\n    }\n  }, [error, clearErrorAlert, hideAfterMs]);\n\n  return () => (\n    <ErrorAlert\n      isOpen={showErrorAlert}\n      message={error}\n      onClose={() => {\n        clearErrorAlert();\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}